

------------------------------------------------------------------------------------------------------------------------------------------

    结构体（struct）：
        
       1： 在C语言中要声明一个结构体变量，必须加上关键字struct，例如：
        
           struct A
           {
              int num;
           };
        
           A a1;             //error C2065: “A”: 未声明的标识符

           struct A a1;      //正确
        
           在C++中，直接使用 A a1; 这种声明的方法是没有任何错误的。
        
      
      
       2： 结构体指针加一时加多少个字节？
           
           结构体指针变量 + 1 = 结构体指针变量 + sizeof(struct 结构体)；
           
           
       
       
       3：结构体的嵌套：
        
           一个结构体中可以嵌套一个之前已经声明或者定义过得结构体变量，但是结构体不允许嵌套自己，但是可以包含自身类型的指针。
           
           例如：
           
                  struct student
                  {
                      char name[10];
                      int um;
                      student *next;
                  };                                //正确
                  
                  struct student
                  {
                      char name[10];
                      int num;
                      student next;                 //error C2460 ："student::next"：使用正在定义的"student"
                  };
        
        
       
       4：结构体所占存储空间
        
           结构体的大小为各成员变量所占存储单元的字节数之和。但是计算的过程需要考虑内存对齐。关于 <内存对齐> 笔者会另开一个篇章，
           
           详细讲解内存对齐的规则以及自定义内省所占存储空间的计算方法。
           
           
        
        
        
        5：C++中只有静态常量整型数据成员才能在struct内部初始化，C语言中不允许在struct内部进行初始化。
        
           例如：
                    struct A
                    {
                        int x = 10;         //error C2864："A::X"：只有静态常量整型数据成员才可以在类型中初始化
                    };
                    
                    struct B
                    {
                        static const int x = 10;              //ok
                        static const int y = 20;              //ok
                        static const double z = 1.2;          //error C2864："A::z"：只有静态常量整型成员才可以在类中初始化
                    };
                    
           
           
       6：C语言和C++语言中struct最大的不同在于：C语言中struct默认的访问限定为public；而C++中class默认的访问限定为private;
       
          其次，在C语言struct中不能出现类的成员限定符，而且只能够封装数据，不能封装方法。而在C++中既可以使用访问限定符，又
          
          可以在struct中封装函数和方法。



------------------------------------------------------------------------------------------------------------------------------------------


